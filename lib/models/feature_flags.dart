import 'package:freezed_annotation/freezed_annotation.dart';

part 'feature_flags.freezed.dart';
part 'feature_flags.g.dart';

@freezed
sealed class FeatureFlags with _$FeatureFlags {
  const FeatureFlags._();

  const factory FeatureFlags({
    @Default([]) required List<String> variants,
    @Default(false) required bool auth,
    @Default(false) required bool publicSignup,
    @Default(false) required bool socialSignup,
    @Default(false) required bool autoplayNext,
    @Default(false) required bool shareVideoButton,
    @Default(false) required bool flutterPlayerControls,
    @Default(false) required bool playNextButton,
    @Default(false) required bool chapters,
    @Default(false) required bool chaptersFirstTab,
    @Default(false) required bool download,
    @Default(false) required bool shorts,
    @Default(false) required bool shortsSourceButtonPrimary,
    @Default(false) required bool shortsSharing,
    @Default(false) required bool shortsHideAutoGenerated,
    @Default(false) required bool shortsHideBeta,
    @Default(false) required bool shortsGuide,
    @Default(false) required bool disableNpawShorts,
    required String? featuredSectionVariant,
    required String? iconSectionVariant,
    @Default(false) required bool jumpToChapter,
  }) = _FeatureFlags;

  factory FeatureFlags.fromJson(Map<String, dynamic> json) => _$FeatureFlagsFromJson(json);

  /// If the value is true in the original, then the value is always true
  ///
  /// Basically just a bunch of || operators
  FeatureFlags mergeWithTrueAlwaysWins(FeatureFlags newFlags) {
    return FeatureFlags(
      variants: newFlags.variants,
      auth: newFlags.auth || auth,
      publicSignup: newFlags.publicSignup || publicSignup,
      socialSignup: newFlags.socialSignup || socialSignup,
      autoplayNext: newFlags.autoplayNext || autoplayNext,
      shareVideoButton: newFlags.shareVideoButton || shareVideoButton,
      flutterPlayerControls: newFlags.flutterPlayerControls || flutterPlayerControls,
      playNextButton: newFlags.playNextButton || playNextButton,
      chapters: newFlags.chapters || chapters,
      chaptersFirstTab: newFlags.chaptersFirstTab || chaptersFirstTab,
      download: newFlags.download || download,
      shorts: newFlags.shorts || shorts,
      shortsSourceButtonPrimary: newFlags.shortsSourceButtonPrimary || shortsSourceButtonPrimary,
      shortsSharing: newFlags.shortsSharing || shortsSharing,
      shortsHideAutoGenerated: newFlags.shortsHideAutoGenerated || shortsHideAutoGenerated,
      shortsHideBeta: newFlags.shortsHideBeta || shortsHideBeta,
      shortsGuide: newFlags.shortsGuide || shortsGuide,
      disableNpawShorts: newFlags.disableNpawShorts || disableNpawShorts,
      featuredSectionVariant: newFlags.featuredSectionVariant ?? featuredSectionVariant,
      iconSectionVariant: newFlags.iconSectionVariant ?? iconSectionVariant,
      jumpToChapter: newFlags.jumpToChapter || jumpToChapter,
    );
  }
}
