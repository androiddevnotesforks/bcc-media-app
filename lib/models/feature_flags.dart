import 'package:freezed_annotation/freezed_annotation.dart';

part 'feature_flags.freezed.dart';
part 'feature_flags.g.dart';

@freezed
sealed class FeatureFlags with _$FeatureFlags {
  const FeatureFlags._();

  const factory FeatureFlags({
    required List<String> variants,
    required bool auth,
    required bool publicSignup,
    required bool socialSignup,
    required bool autoplayNext,
    required bool shareVideoButton,
    required bool flutterPlayerControls,
    required bool playNextButton,
    required bool chapters,
    required bool chaptersFirstTab,
    required bool download,
    required bool shorts,
    required bool shortsSourceButtonPrimary,
    required bool shortsSharing,
    required bool shortsHideAutoGenerated,
    required bool shortsHideBeta,
    required bool shortsGuide,
    required bool disableNpawShorts,
    required String? featuredSectionVariant,
    required String? iconSectionVariant,
    required bool jumpToChapter,
  }) = _FeatureFlags;

  factory FeatureFlags.fromJson(Map<String, dynamic> json) => _$FeatureFlagsFromJson(json);

  /// If the value is true in the original, then the value is always true
  ///
  /// Basically just a bunch of || operators
  FeatureFlags mergeWithTrueAlwaysWins(FeatureFlags newFlags) {
    return FeatureFlags(
      variants: newFlags.variants,
      auth: newFlags.auth || auth,
      publicSignup: newFlags.publicSignup || publicSignup,
      socialSignup: newFlags.socialSignup || socialSignup,
      autoplayNext: newFlags.autoplayNext || autoplayNext,
      shareVideoButton: newFlags.shareVideoButton || shareVideoButton,
      flutterPlayerControls: newFlags.flutterPlayerControls || flutterPlayerControls,
      playNextButton: newFlags.playNextButton || playNextButton,
      chapters: newFlags.chapters || chapters,
      chaptersFirstTab: newFlags.chaptersFirstTab || chaptersFirstTab,
      download: newFlags.download || download,
      shorts: newFlags.shorts || shorts,
      shortsSourceButtonPrimary: newFlags.shortsSourceButtonPrimary || shortsSourceButtonPrimary,
      shortsSharing: newFlags.shortsSharing || shortsSharing,
      shortsHideAutoGenerated: newFlags.shortsHideAutoGenerated || shortsHideAutoGenerated,
      shortsHideBeta: newFlags.shortsHideBeta || shortsHideBeta,
      shortsGuide: newFlags.shortsGuide || shortsGuide,
      disableNpawShorts: newFlags.disableNpawShorts || disableNpawShorts,
      featuredSectionVariant: newFlags.featuredSectionVariant ?? featuredSectionVariant,
      iconSectionVariant: newFlags.iconSectionVariant ?? iconSectionVariant,
      jumpToChapter: newFlags.jumpToChapter ?? jumpToChapter,
    );
  }
}
