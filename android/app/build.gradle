plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id "dev.flutter.flutter-gradle-plugin"
    id 'com.google.gms.google-services'
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

android {
    compileSdkVersion 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

    sourceSets {
        main.java.srcDirs += 'src/main/kotlin'
    }

    defaultConfig {
        applicationId 'tv.brunstad.app'
        minSdkVersion 24
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
            storeFile keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword keystoreProperties['storePassword']
        }
    }
    buildTypes {
        release {
            signingConfig signingConfigs.release
        }
    }

    flavorDimensions 'env'
    productFlavors {
        dev {
            dimension 'env'
            applicationIdSuffix '.dev'
            flutter.target 'lib/main_dev.dart'
            manifestPlaceholders += [
                    applicationLabel     : 'DEV BCC Media',
                    appAuthRedirectScheme: 'tv.brunstad.app.dev',
            ]
        }
        prod {
            getIsDefault().set(true)
            dimension 'env'
            applicationIdSuffix ''
            manifestPlaceholders += [
                    applicationLabel     : 'BCC Media',
                    appAuthRedirectScheme: 'tv.brunstad.app',
            ]
            // flutter.target isnt working https://github.com/flutter/flutter/issues/55366
            flutter.target 'lib/main_prod.dart'
        }
    }
}

flutter {
    source '../..'
}

repositories {
    maven { url 'https://npaw.jfrog.io/artifactory/youbora/' }
}

dependencies {
    def youboraVersion = '6.8.0'
    implementation "com.nicepeopleatwork:youboralib:$youboraVersion"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    /*implementation 'com.google.android.exoplayer:exoplayer:2.18.1'*/
    testImplementation 'junit:junit:4.13.2'
}

